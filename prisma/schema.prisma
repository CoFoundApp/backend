generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ExperienceSkill {
  skillId      Int @map("skill_id")
  experienceId Int @map("experience_id")
  @@id([skillId, experienceId])
}

model Skill {
  id   Int    @id @default(autoincrement())
  name String
}

model ProjectSkill {
  projectId Int @map("project_id")
  skillId   Int @map("skill_id")
  @@id([projectId, skillId])
}

model Contributor {
  id           Int       @id @default(autoincrement())
  endingDate   DateTime? @map("ending_date")
  role         String
  projectId    Int       @map("project_id")
  mission      String
  userId       Int       @map("user_id")
  startingDate DateTime  @map("starting_date")
}

model Experience {
  id           Int       @id @default(autoincrement())
  userId       Int       @map("user_id")
  description  String
  endingDate   DateTime? @map("ending_date")
  startingDate DateTime  @map("starting_date")
  title        String
  location     String
  role         String
}

model Favorites {
  projectId Int @map("project_id")
  userId    Int @map("user_id")
  @@id([projectId, userId])
}

model Messages {
  id              Int       @id @default(autoincrement())
  receiverUserId  Int       @map("receiver_user_id")
  sentDate        DateTime  @map("sent_date")
  message         String
  senderUserId    Int       @map("sender_user_id")
  seenDate        DateTime? @map("seen_date")
}

model UserSkill {
  userId Int @map("user_id")
  skillId Int @map("skil_id")
  @@id([userId, skillId])
}

model Project {
  id           Int       @id @default(autoincrement())
  userId       Int       @map("user_id")
  endingDate   DateTime? @map("ending_date")
  startingDate DateTime  @map("starting_date")
  description  String
  title        String
}

model TopicProject {
  projectId Int @map("project_id")
  topicId   Int @map("topic_id")
  @@id([projectId, topicId])
}

model Application {
  id         Int     @id @default(autoincrement())
  isRefused  Boolean @map("is_refused")
  isAccepted Boolean @map("is_accepted")
  description String
  userId     Int     @map("user_id")
  projectId  Int     @map("project_id")
}

model Topic {
  id   Int    @id @default(autoincrement())
  name String
}

model Profil {
  id          Int     @id @default(autoincrement())
  notifEmail  Boolean @map("notif_email")
  notifPhone  Boolean @map("notif_phone")
  availability String
  location    String
  userId      Int     @map("user_id")
  topicId     Int?    @map("topic_id")
  notifPush   Boolean @map("notif_push")
}

model User {
  id          Int     @id @default(autoincrement())
  isAdmin     Boolean @map("is_admin")
  email       String  @unique
  lastName    String  @map("last_name")
  firstName   String  @map("first_name")
  password    String
  phoneNumber Int?    @map("phone_number")
  username    String  @unique
}

model Notification {
  id                Int     @id @default(autoincrement())
  userId            Int     @map("user_id")
  emitterProjectId  Int?    @map("emitter_projet_id")
  emitterUserId     Int?    @map("emitter_user_id")
  link              String?
  seen              Boolean
  description       String
}
